plugins {
    id 'org.asciidoctor.convert' version '1.5.3'
    id 'org.springframework.boot' version '2.1.3.RELEASE'
//    id 'java'
}



group = 'com.wany'
version = '0.0.1-SNAPSHOT'




ext {
    set('springBootAdminVersion', '2.1.3')
    set('springCloudVersion', 'Greenwich.RELEASE')
}

subprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'java'

    sourceCompatibility = '1.8'

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }
    
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
//        implementation 'org.springframework.boot:spring-boot-starter-amqp'
//        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
//        implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
//        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//        implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
//        implementation 'org.springframework.boot:spring-boot-starter-web'
//        implementation 'org.springframework.boot:spring-boot-starter-webflux'
//        implementation 'org.springframework.boot:spring-boot-starter-websocket'
//        implementation 'de.codecentric:spring-boot-admin-starter-client'
//        implementation 'de.codecentric:spring-boot-admin-starter-server'
//        implementation 'org.springframework.cloud:spring-cloud-bus'
//        implementation 'org.springframework.cloud:spring-cloud-config-server'
//        implementation 'org.springframework.cloud:spring-cloud-starter-config'
//        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
//        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
//        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
//        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard'
//        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-turbine'
//        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-turbine-stream'
//        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-zuul'
//        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
//        implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
//        implementation 'org.springframework.cloud:spring-cloud-stream'
//        implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'
//        implementation 'org.springframework.cloud:spring-cloud-stream-reactive'
//        runtimeOnly 'mysql:mysql-connector-java'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.projectreactor:reactor-test'
        testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        
    }

    dependencyManagement {
        imports {
            mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    test {
        outputs.dir "${buildDir}/dsnippetsDir"
    }

    asciidoctor {
        inputs.dir "${buildDir}/dsnippetsDir"
        dependsOn test
    }
}






